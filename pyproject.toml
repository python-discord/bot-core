[tool.poetry]
name = "bot-core"
version = "5.0.1"
description = "Bot-Core provides the core functionality and utilities for the bots of the Python Discord community."
authors = ["Python Discord <info@pythondiscord.com>"]
license = "MIT"
classifiers=[
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
packages = [
    { include = "botcore" },
]
exclude = ["tests", "tests.*"]

[tool.poetry.dependencies]
python = "3.9.*"
"discord.py" = {url = "https://github.com/Rapptz/discord.py/archive/414759f3723a3fe632ecfc1343a4164a51cd2940.zip"}
async-rediscache = { version = "0.2.0", extras = ["fakeredis"], optional = true }
statsd  = "3.3.0"

[tool.poetry.extras]
async-rediscache = ["async-rediscache"]

[tool.poetry.dev-dependencies]
flake8 = "4.0.1"
flake8-annotations = "2.8.0"
flake8-bugbear = "22.3.23"
flake8-docstrings = "1.6.0"
flake8-import-order = "0.18.1"
flake8-string-format = "0.3.0"
flake8-tidy-imports = "4.6.0"
flake8-todo = "0.7"
pep8-naming = "0.12.1"
pre-commit = "2.18.1"
taskipy = "1.10.1"
python-dotenv = "0.20.0"
pytest = "7.1.1"
pytest-cov = "3.0.0"
pytest-xdist = "2.5.0"
Sphinx = "4.5.0"
GitPython = "3.1.27"
sphinx-autodoc-typehints = "1.18.0"
furo = "2022.4.7"


[tool.taskipy.tasks]
lint = "pre-commit run --all-files"
precommit = "pre-commit install"
apidoc = "sphinx-apidoc -o docs/output botcore -feM"
builddoc = "sphinx-build -nW -j auto -b html docs docs/build"
docs = "task apidoc && task builddoc"
test = "pytest -n 8 --ff"
retest = "pytest -n 8 --lf"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.coverage.run]
branch = true
source_pkgs = ["botcore"]
source = ["tests"]
